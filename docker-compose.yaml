version: "3"

volumes:
  redis-master:
  redis-slave:
  mysql-master:
  mysql-slave:
  mysql-data:
    driver: local

networks:
  redis-replication:
    driver: bridge
  mysql-replication:
    driver: bridge

services:
  api:
    build:
      context: .
      dockerfile: ./docker/api/Dockerfile
    tty: true
    volumes:
      - ./:/go/src/github.com/satorunooshie/eat-with-dog-API
    ports:
      - "8888:8888"
    depends_on:
      - mysql-master
      - mysql-slave
      - redis-master
      - redis-slave

  redis-master:
    image: redis:5.0
    hostname: redis-master
    volumes:
      - ./docker/redis_master:/var/lib/redis
    environment:
      REDIS_MASTER_PASSWORD: ${REDIS_MASTER_PASSWORD}
    command: redis-server --requirepass ${REDIS_MASTER_PASSWORD}
    depends_on:
      - redis-helper
    networks:
      - redis-replication
    ports:
      - 6379:6379
    sysctls:
      - net.core.somaxconn=511

  redis-slave:
    image: redis:5.0
    hostname: redis-slave
    volumes:
      - ./docker/redis_slave:/var/lib/redis
    environment:
      REDIS_MASTER_PASSWORD: ${REDIS_MASTER_PASSWORD}
      REDIS_SLAVE_PASSWORD: ${REDIS_SLAVE_PASSWORD}
    command: redis-server --requirepass ${REDIS_SLAVE_PASSWORD} --replicaof redis-master 6379 --masterauth ${REDIS_MASTER_PASSWORD}
    depends_on:
      - redis-master
      - redis-helper
    networks:
      - redis-replication
    ports:
      - 6479:6379
    sysctls:
      - net.core.somaxconn=511

  redis-helper:
    image: alpine
    command: sh -c "echo never > /sys/kernel/mm/transparent_hugepage/enabled"
    privileged: true

  mysql-master:
    restart: always
    build:
      context: .
      dockerfile: ./docker/mysql/master/Dockerfile
    ports:
      - 3306:3306
    volumes:
#      - ./docker/mysql/init:/docker-entrypoint-initdb.d
      - ./mysql-data:/var/lib/mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      TZ: Asia/Tokyo
      MYSQL_DATABASE: ${MYSQL_MASTER_DATABASE}
      MYSQL_USER: ${MYSQL_MASTER_USER}
      MYSQL_PASSWORD: ${MYSQL_MASTER_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_MASTER_ROOT_PASSWORD}
    networks:
      - mysql-replication

  mysql-slave:
    build:
      context: ./
      dockerfile: docker/mysql/slave/Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_SLAVE_DATABASE}
      MYSQL_USER: ${MYSQL_SLAVE_USER}
      MYSQL_PASSWORD: ${MYSQL_SLAVE_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_SLAVE_ROOT_PASSWORD}
      MYSQL_REPLICATION_HOST: mysql-master
    ports:
      - 13306:3306
    volumes:
      - mysql-data:/var/lib/mysql
    depends_on:
      - mysql-master
    networks:
      - mysql-replication


  phpmyadmin-master:
    image: phpmyadmin/phpmyadmin:latest
    env_file:
      "./.env"
    environment:
      PMA_HOST: mysql-master
    restart: always
    links:
      - mysql-master
      - mysql-slave
    ports:
      - 4000:80

  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    environment:
      SWAGGER_JSON: /api/api-document.yaml
    volumes:
      - ./api-document.yaml:/api/api-document.yaml:ro
    ports:
      - 127.0.0.1:3000:8080

  proxy:
    image: nginx:alpine
    restart: always
    ports:
      - 8082:80
    volumes:
      - ./docker/nginx/htpasswd:/etc/nginx/htpasswd:ro
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
